import re
from pathlib import Path

from tqdm import tqdm

from config import IGNORED_COLUMNS, MANUAL_NUMERIC_FIELDS, REQUIRED_FIELDS
from parsers.wb_parser import WBParser
from wb_data_filler.utils.excel_handler import read_excel_file, write_to_excel


def clean_numeric_value(value: str) -> str:
    '''
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–º –∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤
    –æ–∫—Ä—É–≥–ª—ë–Ω–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.

    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏, –∑–∞–º–µ–Ω—è–µ—Ç
    –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å),
    –æ–∫—Ä—É–≥–ª—è–µ—Ç –µ–≥–æ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É.
    –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.

    –ü—Ä–∏–º–µ—Ä—ã:
        "1.4 –∫–≥" ‚Üí "1"
        "23 —Å–º" ‚Üí "23"
        "1000,5 –º–ª" ‚Üí "1000"

    :param value: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º.
    :return: –°—Ç—Ä–æ–∫–∞ —Å –æ–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∏–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
    '''
    if not isinstance(value, str):
        return value

    match = re.search(r"(\d+(\.\d+)?)", value.replace(",", "."))
    if match:
        num = float(match.group(1))
        return str(int(round(num)))
    return value


def process_all_files(input_dir: Path, output_dir: Path):
    '''
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ Excel-—Ñ–∞–π–ª—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:
    –∑–∞–ø–æ–ª–Ω—è–µ—Ç —à–∞–±–ª–æ–Ω—ã –¥–∞–Ω–Ω—ã–º–∏ —Å Wildberries.

    –î–ª—è –∫–∞–∂–¥–æ–≥–æ .xlsx —Ñ–∞–π–ª–∞:
    - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞;
    - —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª–µ–π;
    - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è;
    - –ø–æ –∫–∞–∂–¥–æ–º—É –∞—Ä—Ç–∏–∫—É–ª—É –∏—â–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ Wildberries;
    - –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ;
    - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª –≤ output-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º `_filled`.

    :param input_dir: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –≤—Ö–æ–¥–Ω—ã–º–∏ Excel-—Ñ–∞–π–ª–∞–º–∏ —à–∞–±–ª–æ–Ω–æ–≤.
    :param output_dir: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã.
    '''
    parser = WBParser()
    input_files = list(input_dir.glob("*.xlsx"))

    for file_path in input_files:
        print(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {file_path.name}")
        category = file_path.stem
        df, column_names, value_descriptions = read_excel_file(file_path)
        result_df = df.copy()

        numeric_fields = {
            name for name, desc in zip(column_names, value_descriptions)
            if isinstance(desc, str) and "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è" in desc
        }
        numeric_fields.update(MANUAL_NUMERIC_FIELDS)

        for idx, row in tqdm(
            df.iterrows(),
            total=len(df),
            desc="–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö"
        ):
            article = row.get("–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞")
            if not article or not isinstance(article, str):
                continue

            data = parser.fetch_data(article, category=category)
            for key, value in data.items():
                if key in IGNORED_COLUMNS:
                    continue
                if key in REQUIRED_FIELDS:
                    result_df.at[idx, REQUIRED_FIELDS[key]] = value
                elif key in numeric_fields:
                    result_df.at[idx, key] = int(clean_numeric_value(value))
                else:
                    result_df.at[idx, key] = value

        write_to_excel(result_df, file_path, output_dir)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω: {file_path.stem}_filled.xlsx\n")
